---
name: Testing

on:
  pull_request:
    branches:
      - main

  workflow_call:

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      # check-out repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      # set-up python with cache
      - name: Setup Python 3.10
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      # install poetry
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # install requirements
      - name: Install requirements
        run: poetry install --no-root --with test
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Install library
        run: poetry install 
      # run unit tests
      - name: Run unit tests
        run: |
          set -o pipefail
          poetry run make unit-tests-cov-fail
      # add pytest coverage report to PR
      - name: Pytest coverage comment
        if: ${{ success() && github.event_name == 'pull_request' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          title: Coverage Report
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      # upload coverage to codecov
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          files: /home/runner/work/polony-counting/polony-counting/coverage.xml
          verbose: true
